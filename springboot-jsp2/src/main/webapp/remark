--------------------------webjars和静态资源映射规则------------------------------------
1、所有/webjars/**，都去classpath:/META-INF/resources/webjars/找资源
webjars 以jar包引入静态资源 如jquery  http://localhost:8080/webjars/jquery/3.6.0/jquery.js

2、访问当前项目的任何资源
classpath:META/INF/resources/
classpath:/resources/
classpath:/static/    http://localhost:8080/asserts/js/bootstrap.min.js
classpath:/public/
/

3、欢迎页：静态资源文件夹下所有的 index.html,被 /**映射
访问 localhost:8008  则找静态资源下的index.html

4、图标路径 **/favicon.ico 都是静态资源文件下找

5、改变默认静态资源位置 spring.resources.static.location=


---------------------------引入spring boot默认前端模板thymeleaf--------------------------
如果项目是jar形式，且使用内嵌tomcat，则是不支持jsp的，只能以html形式
html页面放在classpath:/templates
th: 可以加任意原生html标签

表达式：
${} 1、获取对象属性、方法调用 2、使用内置对象 3、内置工具对象
*{}  选择表达式 和${}功能上一样。有个补充配合使用th:object
#{} 获取国际化内容
@{} 定义url
~{} 片段引用


----------------------------springmvc 自动配置原理-------------------------------------------
1、自动配置了viewResolver(视图解析器：根据方法的返回值得到视图对象)
2、自动注册了converter 转换器， genericconverter formatter 格式化器
3、httpMessageConverter springmvc用来转换http请求和响应 user--json
4、messageCodesResolver 定义错误代码生成规则
5、configurationWebBingingInitializer 初始化web数据绑定
源码：org.springframework.boot.autoconfigure.web :web的所有自动场景

如何修改spring boot的默认配置
1、spring boot在自动配置时很多组件的时候，先看容器中有没有用户配置的（@bean @component）
如果有就是用户配置的，如果没有，才自动配置，如果有些组件可以有多个（view resolver）将
用户配置和默认的组合起来

---------------------扩展springmvc---------------------------------
编写一个配置类（@configuration）是webMvcConfigurationAdapter类型：不能标注@EnableWebMvc
如扩展原先springmvc 中的拦截器等
















